{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A basic template for managing your project using Golang REST APIs.",
        "title": "Project Name",
        "contact": {
            "name": "Hedi Manai",
            "email": "h.manai@tunisiancloud.com"
        },
        "version": "0.1"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/auth/signin": {
            "post": {
                "description": "Authenticate and log in a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentification"
                ],
                "summary": "Signin",
                "parameters": [
                    {
                        "description": "User query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Signin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LoggedInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Create a new user account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentification"
                ],
                "summary": "Signup",
                "parameters": [
                    {
                        "description": "User query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Signup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all companies.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Companies"
                ],
                "summary": "Get companies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CompaniesPagination"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new company.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Companies"
                ],
                "summary": "Create company",
                "parameters": [
                    {
                        "description": "Company query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/companies/{ID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one company.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Companies"
                ],
                "summary": "Get company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CompaniesDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update company.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Companies"
                ],
                "summary": "Update company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete one company.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Companies"
                ],
                "summary": "Delete company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/condidat/{companyID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new condidat.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Condidats"
                ],
                "summary": "Create condidat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "condidat query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RolesIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/condidats/{companyID}/count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get number of all condidats.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Condidats"
                ],
                "summary": "Get number of  condidats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RolesCount"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/condidats/{companyID}/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of all Condidats.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Condidats"
                ],
                "summary": "Get list of  Condidats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CondidatsList"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/condidats/{companyID}/{ID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one condidat.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Condidats"
                ],
                "summary": "Get condidat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "condidats ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RolesDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update one condidat.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Condidats"
                ],
                "summary": "Update condidat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Condidat ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Condidat query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RolesIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete one Condidat\t.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Condidats"
                ],
                "summary": "Delete Condidat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Condidats ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/condidtas/{companyID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all condidats.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Condidats"
                ],
                "summary": "Get condidats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CondidtasPagination"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/interns/Delete/{companyID}/{SupervisorID}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete one intern.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interns"
                ],
                "summary": "Delete intern",
                "parameters": [
                    {
                        "type": "string",
                        "description": "companyID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SupervisorID",
                        "name": "SupervisorID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/interns/all/{companyID}/{SupervisorID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all interns.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interns"
                ],
                "summary": "Get interns",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "companyID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SupervisorID",
                        "name": "SupervisorID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InternsPagination"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/interns/count/{companyID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get number of all interns.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interns"
                ],
                "summary": "Get number of  interns",
                "parameters": [
                    {
                        "type": "string",
                        "description": "companyID ",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InternsCount"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/interns/update/{companyID}/{ID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update intern.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interns"
                ],
                "summary": "Update intern",
                "parameters": [
                    {
                        "type": "string",
                        "description": "companyID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Intern ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Intern query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InternsIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/interns/{companyID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new intern.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interns"
                ],
                "summary": "Create intern",
                "parameters": [
                    {
                        "type": "string",
                        "description": "companyID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Intern query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InternsIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/interns/{companyID}/{ID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one intern.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interns"
                ],
                "summary": "Get intern",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "internID ",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InternsDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/missions/All/{userID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all missions Orders.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MissionOrders"
                ],
                "summary": "Get MissionsOrdes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MissionOrdersDetails"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Presenceal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/missions/count/{userID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all mission_orders count.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MissionOrders"
                ],
                "summary": "Get MissionOrders count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MissionOrdersCount"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Presenceal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/missions/delete/{ID}/{userID}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete one MissionOrders.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MissionOrders"
                ],
                "summary": "Delete MissionOrders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Id",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "MissionOrders ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "MissionOrderseal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/missions/get/{ID}/{userID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one MissionOrders.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MissionOrders"
                ],
                "summary": "Get MissionOrders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "MissionOrders ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MissionOrdersDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Presenceal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/missions/update/{ID}/{userID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update one MissionOrders.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MissionOrders"
                ],
                "summary": "Update MissionOrders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userID ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "MissionOrdersIn ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MissionOrdersIn query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MissionOrdersIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Presenceal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/missions/{companyID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new MissionOrders.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MissionOrders"
                ],
                "summary": "Create MissionOrders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "companyID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MissionOrdersIn query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MissionOrdersIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "MissionOrdersal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/notifications/{userID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all notifications.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NotificationsDetails"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/notifications/{userID}/count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all notifications count.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notifications count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NotificationsCount"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/notifications/{userID}/{ID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one notification.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NotificationsDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update one notification.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Update notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notification query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NotificationsIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete one notification.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/presences/All/{userID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all presences.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Presences"
                ],
                "summary": "Get presences",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PresencesDetails"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Presenceal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/presences/count/{userID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all presences count.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Presences"
                ],
                "summary": "Get presences count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PresencesCount"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Presenceal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/presences/delete/{ID}/{userID}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete one presence.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Presences"
                ],
                "summary": "Delete presence",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Presence ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Presenceal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/presences/get/{ID}/{userID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one presence.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Presences"
                ],
                "summary": "Get presence",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Presence ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PresencesDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Presenceal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/presences/update/{ID}/{userID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update one presence.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Presences"
                ],
                "summary": "Update presence",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Presence ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Presence query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PresencesIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Presenceal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/presences/{companyID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new presence.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Presences"
                ],
                "summary": "Create presence",
                "parameters": [
                    {
                        "type": "string",
                        "description": "companyID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Presence query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PresencesIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Presenceal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/projects/{companyID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all projects.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get projects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UsersPagination"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new Project.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "project query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/projects/{companyID}/count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get number of all projects.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get number of  projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProjectsCount"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/projects/{companyID}/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of all Projects.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get list of  Projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectList"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/projects/{companyID}/{ID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one Project.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/projectsDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Project .",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project  ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete one Project.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Delete Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/roles/{companyID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get roles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RolesPagination"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RolesIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/roles/{companyID}/count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get number of all roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get number of  roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RolesCount"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/roles/{companyID}/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of all roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get list of  roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RolesList"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/roles/{companyID}/{ID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one role.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RolesDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update one role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Update role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RolesIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete one role.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Delete role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/users/{companyID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UsersPagination"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UsersIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/users/{companyID}/count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get number of all users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get number of  users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UsersCount"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/users/{companyID}/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of all users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get list of  users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UsersList"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/users/{companyID}/{ID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UsersDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UsersIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete one user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ApiResponse": {
            "description": "Generic API response",
            "type": "object",
            "properties": {
                "data": {},
                "responseKey": {
                    "type": "string"
                }
            }
        },
        "CompaniesDetails": {
            "description": "CompaniesDetails represents detailed information about a specific company.",
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "CreatedAt is the timestamp indicating when the company entry was created.",
                    "type": "string"
                },
                "email": {
                    "description": "Email is the email address associated with the company.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the company.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the company.",
                    "type": "string"
                },
                "website": {
                    "description": "Website is the website URL of the company.",
                    "type": "string"
                }
            }
        },
        "CompaniesPagination": {
            "description": "CompaniesPagination represents the paginated list of companies.",
            "type": "object",
            "properties": {
                "items": {
                    "description": "Items is a slice containing individual company details.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompaniesTable"
                    }
                },
                "limit": {
                    "description": "Limit is the maximum number of items per page in the pagination.",
                    "type": "integer"
                },
                "page": {
                    "description": "Page is the current page number in the pagination.",
                    "type": "integer"
                },
                "totalCount": {
                    "description": "TotalCount is the total number of companies in the entire list.",
                    "type": "integer"
                }
            }
        },
        "CompaniesTable": {
            "description": "CompaniesTable represents a single company entry in a table.",
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "CreatedAt is the timestamp indicating when the company entry was created.",
                    "type": "string"
                },
                "email": {
                    "description": "Email is the email address associated with the company.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the company.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the company.",
                    "type": "string"
                }
            }
        },
        "CompanyIn": {
            "description": "CompanyIn represents the input structure for creating a new company.",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "Name is the name of the company. It is required and should be between 3 and 30 characters.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                }
            }
        },
        "CondidatsList": {
            "description": "CondidatsList represents a simplified version of the Condidats for listing purposes.",
            "type": "object",
            "properties": {
                "firstname": {
                    "description": "Name is the name of the role.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the role.",
                    "type": "string"
                },
                "lastname": {
                    "description": "Name is the name of the role.",
                    "type": "string"
                }
            }
        },
        "CondidatsTable": {
            "description": "RolesTable represents a single role entry in a table.",
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email is the email address of the condidat.",
                    "type": "string"
                },
                "firstname": {
                    "description": "Firstname is the first name of the condidat.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the  condidat.",
                    "type": "string"
                },
                "lastname": {
                    "description": "Lastname is the last name of the condidat.",
                    "type": "string"
                }
            }
        },
        "CondidtasPagination": {
            "description": "CondidtasPagination represents the paginated list of Condidats.",
            "type": "object",
            "properties": {
                "items": {
                    "description": "Items is a slice containing individual role details.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CondidatsTable"
                    }
                },
                "limit": {
                    "description": "Limit is the maximum number of items per page in the pagination.",
                    "type": "integer"
                },
                "page": {
                    "description": "Page is the current page number in the pagination.",
                    "type": "integer"
                },
                "totalCount": {
                    "description": "TotalCount is the total number of roles in the entire list.",
                    "type": "integer"
                }
            }
        },
        "InternsCount": {
            "description": "InternsCount represents the count of interns.",
            "type": "object",
            "properties": {
                "count": {
                    "description": "Count is the number of interns.",
                    "type": "integer"
                }
            }
        },
        "InternsDetails": {
            "description": "InternsDetails represents detailed information about a specific intern.",
            "type": "object",
            "properties": {
                "educationLevel": {
                    "type": "string"
                },
                "email": {
                    "description": "Email is the email address of the intern.",
                    "type": "string"
                },
                "firstname": {
                    "description": "Firstname is the first name of the intern.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the intern.",
                    "type": "string"
                },
                "lastname": {
                    "description": "Lastname is the last name of the intern.",
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                }
            }
        },
        "InternsIn": {
            "description": "InternsIn represents the input structure for creating a new intern.",
            "type": "object",
            "required": [
                "companyID",
                "educationalSupervisorEmail",
                "educationalSupervisorName",
                "educationalSupervisorPhone",
                "email",
                "firstName",
                "lastName",
                "password",
                "userID"
            ],
            "properties": {
                "companyID": {
                    "description": "companyID",
                    "type": "string"
                },
                "educationalSupervisorEmail": {
                    "description": "education supervisor email  from the university",
                    "type": "string",
                    "maxLength": 255
                },
                "educationalSupervisorName": {
                    "type": "string",
                    "maxLength": 35,
                    "minLength": 3
                },
                "educationalSupervisorPhone": {
                    "description": "education supervisor phone from the university",
                    "type": "string",
                    "maxLength": 15
                },
                "email": {
                    "description": "Email is the email address of the intern. It is required, should be a valid email, and maximum length is 255 characters.",
                    "type": "string",
                    "maxLength": 255
                },
                "firstName": {
                    "description": "Firstname is the first name of the intern. It is required and should be between 3 and 30 characters.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "lastName": {
                    "description": "Lastname is the last name of the intern. It is required and should be between 3 and 35 characters.",
                    "type": "string",
                    "maxLength": 35,
                    "minLength": 3
                },
                "password": {
                    "description": "Lastname        string    `gorm:\"column:last_name; not null;\"`",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 10
                },
                "userID": {
                    "description": "UserID is the unique identifier for the user associated with the user. It is required.",
                    "type": "string"
                }
            }
        },
        "InternsPagination": {
            "description": "InternsPagination represents the paginated list of interns.",
            "type": "object",
            "properties": {
                "items": {
                    "description": "Items is a slice containing individual intern details.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InternsTable"
                    }
                },
                "limit": {
                    "description": "Limit is the maximum number of items per page in the pagination.",
                    "type": "integer"
                },
                "page": {
                    "description": "Page is the current page number in the pagination.",
                    "type": "integer"
                },
                "totalCount": {
                    "description": "TotalCount is the total number of interns in the entire list.",
                    "type": "integer"
                }
            }
        },
        "InternsTable": {
            "description": "InternsTable represents a single intern entry in a table.",
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email is the email address of the intern.",
                    "type": "string"
                },
                "firstname": {
                    "description": "Firstname is the first name of the intern.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the intern.",
                    "type": "string"
                },
                "lastname": {
                    "description": "Lastname is the last name of the intern.",
                    "type": "string"
                }
            }
        },
        "LoggedIn": {
            "description": "LoggedIn represents the user details after successful login.",
            "type": "object",
            "properties": {
                "ID": {
                    "description": "ID is the unique identifier for the user.",
                    "type": "string"
                },
                "email": {
                    "description": "Email is the email address of the user.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the user.",
                    "type": "string"
                },
                "profilePicture": {
                    "description": "ProfilePicture is the URL or path to the user's profile picture.",
                    "type": "string"
                },
                "workCompanyId": {
                    "description": "CompanyID is the unique identifier for the user's company.",
                    "type": "string"
                }
            }
        },
        "LoggedInResponse": {
            "description": "LoggedInResponse represents the response structure after successful login.",
            "type": "object",
            "properties": {
                "accessToken": {
                    "description": "AccessToken is the token obtained after successful login for authentication purposes.",
                    "type": "string"
                },
                "user": {
                    "description": "User is the structure containing details of the logged-in user.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LoggedIn"
                        }
                    ]
                }
            }
        },
        "MissionOrdersCount": {
            "description": "MissionOrdersCount represents the count of MissionOrders.",
            "type": "object",
            "properties": {
                "count": {
                    "description": "Count is the number of MissionOrders.",
                    "type": "integer"
                }
            }
        },
        "MissionOrdersDetails": {
            "description": "MissionOrdersDetails represents detailed information about a specific MissionOrders.",
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description of   the missionOrders",
                    "type": "string"
                },
                "end_date": {
                    "description": "EndDte    of the missionOrders",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the MissionOrders.",
                    "type": "string"
                },
                "object": {
                    "description": "Object   of the missionOrders",
                    "type": "string"
                },
                "start_date": {
                    "description": "StartDate of the missionOrders",
                    "type": "string"
                },
                "transport": {
                    "description": "Transport of the missionOrders",
                    "type": "string"
                },
                "userID": {
                    "description": "User ID associated with the missionOrders",
                    "type": "string"
                }
            }
        },
        "MissionOrdersIn": {
            "description": "MissionOrdersIn represents the input structure for updating the attributes  of MissionOrders.",
            "type": "object",
            "required": [
                "Adress_client",
                "description",
                "object",
                "userID"
            ],
            "properties": {
                "Adress_client": {
                    "description": "Adress client for the Missi",
                    "type": "string"
                },
                "description": {
                    "description": "Description of   the missionOrders",
                    "type": "string"
                },
                "object": {
                    "description": "Object   of the missionOrders",
                    "type": "string"
                },
                "userID": {
                    "description": "ID is the unique identifier for the Missi",
                    "type": "string"
                }
            }
        },
        "NotificationsCount": {
            "description": "NotificationsCount represents the count of notifications.",
            "type": "object",
            "properties": {
                "count": {
                    "description": "Count is the number of notifications.",
                    "type": "integer"
                }
            }
        },
        "NotificationsDetails": {
            "description": "NotificationsDetails represents detailed information about a specific notification.",
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content is the textual content of the notification.",
                    "type": "string"
                },
                "createdAt": {
                    "description": "CreatedAt is the timestamp indicating when the notification was created.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the notification.",
                    "type": "string"
                },
                "seen": {
                    "description": "Seen is a boolean indicating whether the notification has been seen or not.",
                    "type": "boolean"
                },
                "type": {
                    "description": "Type is the type or category of the notification.",
                    "type": "string"
                }
            }
        },
        "NotificationsIn": {
            "description": "NotificationsIn represents the input structure for updating the \"seen\" status of notifications.",
            "type": "object",
            "required": [
                "seen"
            ],
            "properties": {
                "seen": {
                    "description": "Seen is a boolean indicating whether the notification has been seen or not. It is required.",
                    "type": "boolean"
                }
            }
        },
        "PresencesCount": {
            "description": "PresencesCount represents the count of presences.",
            "type": "object",
            "properties": {
                "count": {
                    "description": "Count is the number of presences.",
                    "type": "integer"
                }
            }
        },
        "PresencesDetails": {
            "description": "PresencesDetails represents detailed information about a specific presence.",
            "type": "object",
            "required": [
                "userID"
            ],
            "properties": {
                "check": {
                    "description": "Check is the time of presences",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the presence.",
                    "type": "string"
                },
                "matricule": {
                    "description": "Type is the type or category of the presence.",
                    "type": "integer"
                },
                "userID": {
                    "description": "unique User ID",
                    "type": "string"
                }
            }
        },
        "PresencesIn": {
            "description": "PresencesIn represents the input structure for updating the \"seen\" status of presences.",
            "type": "object",
            "required": [
                "check",
                "matricule",
                "userID"
            ],
            "properties": {
                "check": {
                    "description": "Check is the time of presences",
                    "type": "string"
                },
                "matricule": {
                    "description": "Seen is a boolean indicating whether the presence has been seen or not. It is required.",
                    "type": "integer"
                },
                "userID": {
                    "description": "unique User ID",
                    "type": "string"
                }
            }
        },
        "ProjectIn": {
            "description": "ProjectIn represents the input structure for creating a new project.",
            "type": "object",
            "required": [
                "code",
                "companyID",
                "description",
                "exp_date",
                "projectname",
                "technologies"
            ],
            "properties": {
                "code": {
                    "description": "code is the code of pfe project",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "companyID": {
                    "description": "CompanyID is the unique identifier for the company associated with the project. It is required.",
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 3
                },
                "exp_date": {
                    "type": "string"
                },
                "projectname": {
                    "description": "projectname is the  name of the project. It is required and should be between 3 and 35 characters.",
                    "type": "string",
                    "maxLength": 35,
                    "minLength": 3
                },
                "technologies": {
                    "description": "technologies required to develop the project",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ProjectList": {
            "description": "ProjectList represents a simplified version of the project for listing purposes.",
            "type": "object",
            "properties": {
                "code": {
                    "description": "code is the code of pfe project",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the project.",
                    "type": "string"
                },
                "projectname": {
                    "description": "projectname is the  name of the project.",
                    "type": "string"
                }
            }
        },
        "ProjectsCount": {
            "description": "ProjectsCount represents the count of projects.",
            "type": "object",
            "properties": {
                "count": {
                    "description": "Count is the number of projects.",
                    "type": "integer"
                }
            }
        },
        "RolesCount": {
            "description": "RolesCount represents the count of roles.",
            "type": "object",
            "properties": {
                "count": {
                    "description": "Count is the number of roles.",
                    "type": "integer"
                }
            }
        },
        "RolesDetails": {
            "description": "RolesDetails represents detailed information about a specific role.",
            "type": "object",
            "properties": {
                "companyID": {
                    "description": "CompanyID is the unique identifier for the company associated with the role.",
                    "type": "string"
                },
                "companyName": {
                    "description": "CompanyName is the name of the company associated with the role.",
                    "type": "string"
                },
                "createdAt": {
                    "description": "CreatedAt is the timestamp indicating when the role entry was created.",
                    "type": "string"
                },
                "firstname": {
                    "description": "Name is the name of the role.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the role.",
                    "type": "string"
                }
            }
        },
        "RolesIn": {
            "description": "RolesIn represents the input structure for creating a new role.",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "Name is the name of the role. It is required and should be between 2 and 40 characters.",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 2
                }
            }
        },
        "RolesList": {
            "description": "RolesList represents a simplified version of the role for listing purposes.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID is the unique identifier for the role.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the role.",
                    "type": "string"
                }
            }
        },
        "RolesPagination": {
            "description": "RolesPagination represents the paginated list of roles.",
            "type": "object",
            "properties": {
                "items": {
                    "description": "Items is a slice containing individual role details.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RolesTable"
                    }
                },
                "limit": {
                    "description": "Limit is the maximum number of items per page in the pagination.",
                    "type": "integer"
                },
                "page": {
                    "description": "Page is the current page number in the pagination.",
                    "type": "integer"
                },
                "totalCount": {
                    "description": "TotalCount is the total number of roles in the entire list.",
                    "type": "integer"
                }
            }
        },
        "RolesTable": {
            "description": "RolesTable represents a single role entry in a table.",
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "CreatedAt is the timestamp indicating when the role entry was created.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the role.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the role.",
                    "type": "string"
                }
            }
        },
        "Signin": {
            "description": "Signin represents the information required for signing in.",
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "Email is the email address of the user. It is required, should be a valid email, and maximum length is 255 characters.",
                    "type": "string",
                    "maxLength": 255
                },
                "password": {
                    "description": "Password is the user's password. It is required, and its length should be between 10 and 255 characters.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 10
                }
            }
        },
        "Signup": {
            "description": "Signup represents the account information for signing up.",
            "type": "object",
            "required": [
                "companyName",
                "email",
                "firstName",
                "lastName",
                "password"
            ],
            "properties": {
                "companyName": {
                    "description": "CompanyName is the name of the user's company. It is required and should be between 2 and 255 characters.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "email": {
                    "description": "Email is the email address of the user. It is required, should be a valid email, and maximum length is 255 characters.",
                    "type": "string",
                    "maxLength": 255
                },
                "firstName": {
                    "description": "Firstname is the first name of the user. It should be between 3 and 30 characters.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "lastName": {
                    "description": "Lastname is the last name of the user. It should be between 3 and 35 characters.",
                    "type": "string",
                    "maxLength": 35,
                    "minLength": 3
                },
                "password": {
                    "description": "Password is the user's password. It is required, and its length should be between 10 and 255 characters.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 10
                }
            }
        },
        "UsersCount": {
            "description": "UsersCount represents the count of users.",
            "type": "object",
            "properties": {
                "count": {
                    "description": "Count is the number of users.",
                    "type": "integer"
                }
            }
        },
        "UsersDetails": {
            "description": "UsersDetails represents detailed information about a specific user.",
            "type": "object",
            "properties": {
                "country": {
                    "description": "Country is the country of residence of the user.",
                    "type": "string"
                },
                "createdAt": {
                    "description": "CreatedAt is the timestamp indicating when the user entry was created.",
                    "type": "string"
                },
                "email": {
                    "description": "Email is the email address of the user.",
                    "type": "string"
                },
                "firstname": {
                    "description": "Firstname is the first name of the user.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the user.",
                    "type": "string"
                },
                "lastname": {
                    "description": "Lastname is the last name of the user.",
                    "type": "string"
                },
                "status": {
                    "description": "Status is a boolean indicating the current status of the user.",
                    "type": "boolean"
                }
            }
        },
        "UsersIn": {
            "description": "UsersIn represents the input structure for creating a new user.",
            "type": "object",
            "required": [
                "companyID",
                "email",
                "firstName",
                "lastName",
                "password"
            ],
            "properties": {
                "companyID": {
                    "description": "CompanyID is the unique identifier for the company associated with the user. It is required.",
                    "type": "string"
                },
                "email": {
                    "description": "Email is the email address of the user. It is required, should be a valid email, and maximum length is 255 characters.",
                    "type": "string",
                    "maxLength": 255
                },
                "firstName": {
                    "description": "Firstname is the first name of the user. It is required and should be between 3 and 30 characters.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "lastName": {
                    "description": "Lastname is the last name of the user. It is required and should be between 3 and 35 characters.",
                    "type": "string",
                    "maxLength": 35,
                    "minLength": 3
                },
                "password": {
                    "description": "Password is the user's password. It is required, and its length should be between 10 and 255 characters.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 10
                }
            }
        },
        "UsersList": {
            "description": "UsersList represents a simplified version of the user for listing purposes.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID is the unique identifier for the user.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the full name of the user.",
                    "type": "string"
                }
            }
        },
        "UsersPagination": {
            "description": "UsersPagination represents the paginated list of users.",
            "type": "object",
            "properties": {
                "items": {
                    "description": "Items is a slice containing individual user details.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UsersTable"
                    }
                },
                "limit": {
                    "description": "Limit is the maximum number of items per page in the pagination.",
                    "type": "integer"
                },
                "page": {
                    "description": "Page is the current page number in the pagination.",
                    "type": "integer"
                },
                "totalCount": {
                    "description": "TotalCount is the total number of users in the entire list.",
                    "type": "integer"
                }
            }
        },
        "UsersTable": {
            "description": "UsersTable represents a single project entry in a table.",
            "type": "object",
            "properties": {
                "code": {
                    "description": "code is the code of pfe project",
                    "type": "string"
                },
                "companyID": {
                    "description": "CompanyID is the unique identifier for the company associated with the project. It is required.",
                    "type": "string"
                },
                "expdate": {
                    "description": "expdate is the timestamp indicating when the project entry will ends.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the project.",
                    "type": "string"
                },
                "projectname": {
                    "description": "projectname is the  name of the project. It is required .",
                    "type": "string"
                },
                "technologies": {
                    "description": "technologies required to develop the project",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "projectsDetails": {
            "description": "projectsDetails represents detailed information about a specific project.",
            "type": "object",
            "properties": {
                "code": {
                    "description": "code is the code of pfe project",
                    "type": "string"
                },
                "companyID": {
                    "description": "CompanyID is the unique identifier for the company associated with the project. It is required.",
                    "type": "string"
                },
                "expdate": {
                    "description": "expdate is the timestamp indicating when the project entry will ends.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the project.",
                    "type": "string"
                },
                "projectname": {
                    "description": "projectname is the  name of the project. It is required .",
                    "type": "string"
                },
                "technologies": {
                    "description": "technologies required to develop the project",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}